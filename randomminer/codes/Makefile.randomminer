#----------------------------------------------------------------------------
#       Macros
#----------------------------------------------------------------------------
CC            = gcc
CXX           = g++
LD            = $(CXX) $(CCFLAGS) $(CPPFLAGS)
AR            = ar
PICFLAGS      = -fPIC
CPPFLAGS      = $(PICFLAGS) $(GENFLAGS) -D_REENTRANT -I"/opt/local/include/boost"
OBJEXT        = .o
OUTPUT_OPTION = -o "$@"
COMPILE.c     = $(CC) $(CFLAGS) $(CPPFLAGS) -c
COMPILE.cc    = $(CXX) $(CCFLAGS) $(CPPFLAGS) -c
LDFLAGS       = -L"." -L"/opt/local/lib/" -L"-lboost_system-mt" -L"-lboost_thread-mt"
CCC           = $(CXX)
MAKEFILE      = Makefile.randomminer
DEPENDENCIES  = .depend.$(MAKEFILE)
BTARGETDIR    = ./
BIN           = $(BTARGETDIR)./randomminer$(EXESUFFIX)$(EXEEXT)
CAT           = cat
MV            = mv -f
RM            = rm -rf
CP            = cp -p
NUL           = /dev/null
MKDIR         = mkdir -p
TESTDIRSTART  = test -d
TESTDIREND    = ||
TOUCH         = touch
EXEEXT        = 
LIBPREFIX     = lib
LIBSUFFIX     = 
GENFLAGS      = -O
LDLIBS        = -ldl $(subst lib,-l,$(sort $(basename $(notdir $(wildcard /usr/lib/librt.so /lib/librt.so))))) -lpthread
OBJS          = dfs$(OBJEXT) graph$(OBJEXT) canonicalcode$(OBJEXT) StringTokenizer$(OBJEXT) codeset$(OBJEXT) random$(OBJEXT) randomMining$(OBJEXT) randomMiner$(OBJEXT)
SRC           = dfs.cpp graph.cpp canonicalcode.cpp StringTokenizer.cpp codeset.cpp random.cpp randomMining.cpp randomMiner.cpp
LINK.cc       = $(LD) $(LDFLAGS)
EXPORTFLAGS   = 
DEPLIBS       = $(foreach lib, , $(foreach libpath, . /opt/local/lib/ -lboost_system-mt -lboost_thread-mt, $(wildcard $(libpath)/lib$(lib).a)))

#----------------------------------------------------------------------------
#       Local targets
#----------------------------------------------------------------------------

all: $(BIN)

$(BIN): $(OBJS) $(DEPLIBS)
	@$(TESTDIRSTART) "$(BTARGETDIR)" $(TESTDIREND) $(MKDIR) "$(BTARGETDIR)"
	$(LINK.cc) $(OBJS) $(LDLIBS) $(OUTPUT_OPTION)

generated: $(GENERATED_DIRTY)
	@-:

dfs$(OBJEXT): dfs.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) dfs.cpp

graph$(OBJEXT): graph.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) graph.cpp

canonicalcode$(OBJEXT): canonicalcode.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) canonicalcode.cpp

StringTokenizer$(OBJEXT): StringTokenizer.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) StringTokenizer.cpp

codeset$(OBJEXT): codeset.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) codeset.cpp

random$(OBJEXT): random.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) random.cpp

randomMining$(OBJEXT): randomMining.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) randomMining.cpp

randomMiner$(OBJEXT): randomMiner.cpp
	$(COMPILE.cc) $(EXPORTFLAGS) $(OUTPUT_OPTION) randomMiner.cpp

clean:
	-$(RM) $(OBJS)

realclean: clean
	-$(RM) $(BIN)

check-syntax:
	$(COMPILE.cc) $(EXPORTFLAGS) -Wall -Wextra -pedantic -fsyntax-only $(CHK_SOURCES)

#----------------------------------------------------------------------------
#       Dependencies
#----------------------------------------------------------------------------


depend:
	-$(MPC_ROOT)/depgen.pl  $(CFLAGS) $(CCFLAGS) $(CPPFLAGS) -f $(DEPENDENCIES) $(SRC) 2> $(NUL)

-include $(DEPENDENCIES)
